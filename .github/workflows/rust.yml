name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check_ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Add public keys
        run: sudo apt-get update && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5 &&
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          override: true

      - name: Install OpenCV
        run: sudo apt-get install -y --fix-missing libopencv-dev libopencv-calib3d-dev libopencv-contrib-dev libopencv-features2d-dev libopencv-highgui-dev libopencv-imgcodecs-dev libopencv-objdetect-dev libopencv-shape-dev libopencv-stitching-dev libopencv-superres-dev libopencv-video-dev libopencv-videoio-dev libopencv-videostab-dev libopencv4.2-java libopencv-calib3d4.2 libopencv-contrib4.2 libopencv-features2d4.2 libopencv-highgui4.2 libopencv-imgcodecs4.2 libopencv-videoio4.2 libgdal26 libodbc1

      - name: Clang
        run: sudo apt-get install -y clang && sudo ln -s libclang.so.1 /usr/lib/llvm-10/lib/libclang.so

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install -y --no-install-recommends libasound2-dev libudev-dev

      - name: Install other deps
        run: sudo apt-get install -y portaudio19-dev build-essential libpulse-dev libdbus-1-dev pkg-config libx11-dev libatk1.0-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libwayland-dev libxkbcommon-dev

      - name: Check project
        run: cargo check

      - name: Build binary
        run: cargo build

  check_windows:
    name: Build on Windows
    runs-on: windows-2022
    env:
      LLVM_VERSION: 15.0.7
      OPENCV_VERSION: 4.6.0
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          override: true

      - name: Install LLVM/clang
        run: choco install -y llvm --version "$LLVM_VERSION"
        shell: bash

      - name: Install OpenCV
        run: choco install -y opencv --version "$OPENCV_VERSION"
        shell: bash

      - name: Build binary
        run: |
          export PATH="/C/Program Files/LLVM/bin:$PATH"
          export LIBCLANG_PATH="/C/Program Files/LLVM/bin"
          export PATH="/C/tools/opencv/build/x64/vc15/bin:$PATH"
          export OPENCV_LINK_PATHS="/C/tools/opencv/build/x64/vc15/lib"
          export OPENCV_LINK_LIBS="opencv_world${OPENCV_VERSION//./}"
          export OPENCV_INCLUDE_PATHS="/C/tools/opencv/build/include"
          cargo build
        shell: bash
